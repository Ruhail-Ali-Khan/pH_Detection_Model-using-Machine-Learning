# -*- coding: utf-8 -*-
"""ML project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jerKanGhoxQDxMa9MzOX-yVqCf7Ahof-
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn import preprocessing

data = pd.read_csv("/content/drive/MyDrive/archive (2).zip")
data.head(20)

print(data.isna().sum(axis = 0))

features = data[["blue","green","red"]]
target = data.label

features.head()

target.head()

features = preprocessing.MinMaxScaler().fit_transform(features)
feature_train, feature_test, target_train, target_test = train_test_split(features,target)

model = KNeighborsClassifier(n_neighbors=32)
fitModel = model.fit(feature_train, target_train)
predictions = fitModel.predict(feature_test)

cross_valid_scores = []

for k in range(1, 100):
  knn = KNeighborsClassifier(n_neighbors = k)
  scores = cross_val_score(knn,features, target, cv = 10, scoring = 'accuracy')
  cross_valid_scores.append(scores.mean())    

print("Optimal k with cross-validation: \t",np.argmax(cross_valid_scores))
print(confusion_matrix(target_test,predictions))
print(accuracy_score(target_test,predictions))

import seaborn as sns
sns.heatmap(confusion_matrix(target_test,predictions), annot=True, cmap='Blues')

print(accuracy_score(target_test,predictions))

